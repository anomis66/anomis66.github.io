/* --------------------
 * CSS:Framework
 * 
 * version: 2020-12-22 build 
 * 
 * by Simon Arthur <simon.arthur@rbwm.gov.uk>
 *
 * -------------------- */

 
/* --------------------
 * LAYER DEFINITIONS FOR THIS SLIGHTLY MODIFIED _INVERTED TRIANGLE CSS_ STRUCTURE:
 *
 * 0.Vendor - files for third party code. At the top to be the most easily overridden
 * 1.Settings - preprocessors, fonts, variables (doesn’t generate any style output)
 * 2.Tools - mixins, functions (doesn’t generate any style output)
 * 3.Generic - resets or normalizing files
 * 4.Elements - bare HTML elements (H1, a, p, etc…)
 * 5.Components - Majority of code goes here to style specific UI components
 * 6.Utilities/Helpers - utilities and helper classes that have the most authority (show/hide, color helpers, etc…)
 *
 * ADDING A VENDOR LAYER
 * Vendor party style sheets should always have the least authority over the cascade. The custom code should easily overwrite anything from a vendor without needing `!important` tags. Therefore, adding a vendor directory as the topmost layer in the inverted triangle.
 * -------------------- */

/* 0.
 * -------------------- */

/* https://icons8.com/line-awesome */
@import url('./line-awesome/1.3.0/css/line-awesome.min.css'); 
/* http://fancyapps.com/fancybox/3/ */
@import url('jquery.fancybox.min.css?v3.5.7'); 
 
/* 1. -------------------- */
@import url('_variables.css?v21.0102');


/* 3. -------------------- */
@import url('sanitize.css?v12.0.1');
@import url('diagnosstic.css?v1.0');


/* 4. -------------------- */
@import url('_typography.css');
@import url('_grid.css');

/* 5. -------------------- */
@import url('_images.css');
@import url('_tables.css');

